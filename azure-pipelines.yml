# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- main
- pr

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'BarBStyle.Color.Theme.csproj'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'

steps:

- task: UseDotNet@2
  displayName: 'Use .NET 6 Core sdk'
  inputs:
    packageType: 'sdk'
    version: '6.0.x'
    includePreviewVersions: true

- task: NuGetToolInstaller@1
  displayName: 'Instalando NuGet'

- task: NuGetCommand@2
  displayName: 'Restaurando NuGet'
  inputs:
    command: 'restore'
    restoreSolution: '$(solution)'
    feedsToUse: 'select'

- task: VSBuild@1
  displayName: 'Fazendo build'
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: NuGetCommand@2
  displayName: 'Empacotando NuGet'
  inputs:
    command: 'pack'
    packagesToPack: '**/BarBStyle.Colors.Theme.nuspec'
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '1'
    minorVersion: '0'
    patchVersion: '0'
    allowPackageConflicts: true
    packDestination: '$(Build.ArtifactStagingDirectory)'

    
- task: NuGetCommand@2
  displayName: 'Enviando NuGet'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'BarbBStyle'

- task: UseNode@1
  inputs:
    versionSpec: '14.x'
    checkLatest: true

- script: |
    npm install -g semantic-release @semantic-release/changelog
    semantic-release
  displayName: 'Generate Release Notes'

- task: PublishPipelineArtifact@1
  displayName: 'Publish Release Notes'
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    artifact: 'CHANGELOG.md'
    publishLocation: 'pipeline'  
    

